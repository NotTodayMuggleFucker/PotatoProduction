{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HookForm = () => {\n  _s();\n\n  var _errors$Name;\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const [event, setData] = useState([]);\n\n  const onSubmit = (data, e) => {\n    console.log(data);\n    setData([...event, data]); // clean the fields\n\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact-heading\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact-form-text\",\n        children: \"We\\u2019re available for remote projects around the world.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"OnlyName\",\n          lassName: \"form-input\",\n          ...register(\"Name\", {\n            required: true,\n            maxLength: 20\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"contact-form-text\",\n          children: [\" \", ((_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.type) === 'required' && \"First name is required\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n            pattern: /^[A-Za-z]+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HookForm, \"/RNkkD1QX7GKs7M/RFj2LKlw5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c = HookForm;\nexport default HookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js"],"names":["React","Fragment","useState","useForm","HookForm","register","formState","errors","handleSubmit","event","setData","onSubmit","data","e","console","log","target","reset","required","maxLength","Name","type","pattern"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AAEnB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAtB;AAAkCC,IAAAA;AAAlC,MAAkDL,OAAO,EAA/D;AAEA,QAAM,CAACM,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMS,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAc;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,IAAAA,OAAO,CAAC,CACJ,GAAGD,KADC,EAEJG,IAFI,CAAD,CAAP,CAF2B,CAM3B;;AACAC,IAAAA,CAAC,CAACG,MAAF,CAASC,KAAT;AACH,GARD;;AAUA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAM,QAAA,QAAQ,EAAET,YAAY,CAACG,QAAD,CAA5B;AAAA,gCAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAAgC,UAAA,WAAW,EAAC,UAA5C;AAAuD,UAAA,QAAQ,EAAC,YAAhE;AAAA,aACMN,QAAQ,CAAC,MAAD,EAAS;AAAEa,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,SAAS,EAAE;AAA7B,WAAT;AADd;AAAA;AAAA;AAAA;AAAA,gBAFA,eAKI;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA,0BAAsC,iBAAAZ,MAAM,CAACa,IAAP,8DAAaC,IAAb,MAAsB,UAAtB,IAAoC,wBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAOA,sBAAWhB,QAAQ,CAAC,UAAD,EAAa;AAAEiB,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAPA,eAUR;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAVQ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;GAAMlB,Q;UAEsDD,O;;;KAFtDC,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState, } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\n\nconst HookForm = () => {\n\n    const {register, formState: { errors }, handleSubmit} = useForm();\n\n    const [event, setData] = useState([]);\n\n    const onSubmit = (data, e ) => {\n        console.log(data)\n        setData([\n            ...event,\n            data\n        ])\n        // clean the fields\n        e.target.reset();\n    }\n  \n    return (\n        <Fragment>\n            <div className='contact-container'>\n            <h1 className='contact-heading'>Contact Us</h1>\n              <p className='contact-form-text'>\n                Weâ€™re available for remote projects around the world.\n                 </p>\n              <form onSubmit={handleSubmit(onSubmit)}  >\n      \n              <input type=\"text\" name=\"name\"  placeholder=\"OnlyName\" lassName=\"form-input\" \n                {...register(\"Name\", { required: true, maxLength: 20 })} />\n      \n                  <span className='contact-form-text'> {errors.Name?.type === 'required' && \"First name is required\"} </span>\n     \n              <input {...register(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\n     \n   \n      <input type=\"submit\" />\n    </form>\n           </div>\n        </Fragment>\n\n    );\n}\n \nexport default HookForm;\n"]},"metadata":{},"sourceType":"module"}