{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react'; // eslint-disable-next-line no-unused-vars\n\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HookForm = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact-heading\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact-form-text\",\n        children: \"We\\u2019re available for remote projects around the world.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"form__container-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Name is required'\n              },\n              maxLength: {\n                value: 5,\n                message: 'No more tan 10 characters!'\n              },\n              minLength: {\n                value: 2,\n                message: 'Minimum 2 characters'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email address\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Email is required'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"subject\",\n            placeholder: \"Subject\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Please field out this field'\n              },\n              minLength: {\n                value: 2,\n                message: 'Please field out this field'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"message\",\n            placeholder: \"Message\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Please field out this field'\n              },\n              minLength: {\n                value: 5,\n                message: 'Please field out this field'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"btn--primary\",\n          buttonSize: \"btn--wide\",\n          buttonColor: \"pink\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HookForm, \"NWhkzLRhcXHWJdrk0uw8s6R0Lyw=\", false, function () {\n  return [useForm];\n});\n\n_c = HookForm;\nexport default HookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js"],"names":["React","Fragment","useState","axios","Button","useForm","HookForm","register","errors","handleSubmit","onSubmit","data","console","log","required","value","message","maxLength","minLength"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form'\n\n\nconst HookForm = () => {\n\n    const {register, errors, handleSubmit} = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data)\n    }\n\n    return (\n        <Fragment>\n            <div className='contact-container'>\n            <h1 className='contact-heading'>Contact Us</h1>\n              <p className='contact-form-text'>\n                Weâ€™re available for remote projects around the world.\n                 </p>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form__container-card\">\n                <div className=\"\">\n                    <input type=\"text\" name=\"name\"\n                     placeholder=\"Name\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                            value: true, \n                            message: 'Name is required'\n                            }, \n                        maxLength: {\n                            value: 5, \n                            message: 'No more tan 10 characters!'\n                            },\n                        minLength: {\n                            value: 2, \n                            message: 'Minimum 2 characters'\n                            }\n                    })}\n                     >\n                     </input>\n                </div>\n                <div className=\"\">\n                <input type=\"email\" name=\"email\"\n                     placeholder=\"Email address\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                            value: true, \n                            message: 'Email is required'\n                            }, \n                    })}\n                     >\n                     </input>\n                </div>\n                <div className=\"\">\n                     <input type=\"text\" name=\"subject\"\n                     placeholder=\"Subject\" className=\"form-input\" \n                     ref={register({\n                     required: {\n                        value: true, \n                        message: 'Please field out this field'\n                        }, \n                    minLength: {\n                        value: 2, \n                        message: 'Please field out this field'\n                        }\n                })}\n                     >\n                     </input>\n                </div>\n                <div className=\"\">\n                    <textarea type=\"text\" name=\"message\"\n                     placeholder=\"Message\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                           value: true, \n                           message: 'Please field out this field'\n                           }, \n                       minLength: {\n                           value: 5, \n                           message: 'Please field out this field'\n                           }\n                   })}\n                     >\n                     </textarea>\n                </div>\n                <Button type=\"submit\"  className='btn--primary'  buttonSize='btn--wide' buttonColor='pink'>\n                    Send\n                    </Button>\n            </form>\n            </div>\n        </Fragment>\n    );\n}     \n\n\nexport default HookForm;\n\n"]},"metadata":{},"sourceType":"module"}