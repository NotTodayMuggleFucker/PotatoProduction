{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HookForm = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hooks Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"OnlyName\",\n        lassName: \"form-input\",\n        ...register(\"Name\", {\n          required: true,\n          maxLength: 20\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger text-small d-block mb-2\",\n        children: errors.name && \"Name is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n          pattern: /^[A-Za-z]+$/i\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"age\", {\n          min: 18,\n          max: 99\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HookForm, \"NWhkzLRhcXHWJdrk0uw8s6R0Lyw=\", false, function () {\n  return [useForm];\n});\n\n_c = HookForm;\nexport default HookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js"],"names":["React","Fragment","useState","useForm","HookForm","register","errors","handleSubmit","onSubmit","data","console","log","required","maxLength","name","pattern","min","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAmCJ,OAAO,EAAhD;;AAEA,QAAMK,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA,8BACN;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAgC,QAAA,WAAW,EAAC,UAA5C;AAAuD,QAAA,QAAQ,EAAC,YAAhE;AAAA,WACKH,QAAQ,CAAC,MAAD,EAAS;AAAEO,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAT;AADb;AAAA;AAAA;AAAA;AAAA,cADM,EAGLP,MAAM,CAACQ,IAAP,iBACA;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA,kBACCR,MAAM,CAACQ,IAAP,IAAe;AADhB;AAAA;AAAA;AAAA;AAAA,cAJK,eAON,sBAAWT,QAAQ,CAAC,UAAD,EAAa;AAAEU,UAAAA,OAAO,EAAE;AAAX,SAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,cAPM,eASN;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,WAAyBV,QAAQ,CAAC,KAAD,EAAQ;AAAEW,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,GAAG,EAAE;AAAhB,SAAR;AAAjC;AAAA;AAAA;AAAA;AAAA,cATM,eAWN;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAXM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA3BD;;GAAMb,Q;UAEuCD,O;;;KAFvCC,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState, } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\n\nconst HookForm = () => {\n\n    const {register, errors, handleSubmit} = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data)\n    }\n  \n    return (\n        <Fragment>\n            <h2>Hooks Forms</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"text\" name=\"name\"  placeholder=\"OnlyName\" lassName=\"form-input\" \n       {...register(\"Name\", { required: true, maxLength: 20 })} />\n      {errors.name &&\n       <span className=\"text-danger text-small d-block mb-2\">\n       {errors.name && \"Name is required\"}\n</span>}\n      <input {...register(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\n     \n      <input type=\"number\" {...register(\"age\", { min: 18, max: 99 })} />\n      \n      <input type=\"submit\" />\n    </form>\n            \n        </Fragment>\n    );\n}\n \nexport default HookForm;\n"]},"metadata":{},"sourceType":"module"}