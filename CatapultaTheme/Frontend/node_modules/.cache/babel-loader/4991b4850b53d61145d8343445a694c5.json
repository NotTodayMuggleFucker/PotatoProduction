{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react'; // eslint-disable-next-line no-unused-vars\n\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  var _errors$titulo, _errors$descripcion;\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const [Event, setData] = useState([]);\n\n  const onSubmit = (data, e) => {\n    console.log(data);\n    setData([...Event, data]);\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(procesarFormulario),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"titulo\",\n        ref: register({\n          required: {\n            value: true,\n            message: 'Ingrese un nombre'\n          }\n        }),\n        className: \"form-control my-2\",\n        placeholder: \"Ingrese t\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger text-small d-block mb-2\",\n        children: errors === null || errors === void 0 ? void 0 : (_errors$titulo = errors.titulo) === null || _errors$titulo === void 0 ? void 0 : _errors$titulo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"descripcion\",\n        ref: register({\n          required: {\n            value: true,\n            message: 'Ingrese descripción'\n          }\n        }),\n        className: \"form-control my-2\",\n        placeholder: \"Ingrese descripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger text-small d-block mb-2\",\n        children: errors === null || errors === void 0 ? void 0 : (_errors$descripcion = errors.descripcion) === null || _errors$descripcion === void 0 ? void 0 : _errors$descripcion.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-2\",\n      children: entradas.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.titulo, \" - \", item.descripcion]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"1j3SQLAry4RMCNETSStiMnIUngk=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js"],"names":["React","Fragment","useState","axios","Button","useForm","ContactForm","register","errors","handleSubmit","Event","setData","onSubmit","data","e","console","log","target","reset","procesarFormulario","required","value","message","titulo","descripcion","entradas","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAAA;;AAEtB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAAmCJ,OAAO,EAAhD;AAEA,QAAM,CAACK,KAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMU,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,IAAAA,OAAO,CAAC,CACJ,GAAGD,KADC,EAEJG,IAFI,CAAD,CAAP;AAIAC,IAAAA,CAAC,CAACG,MAAF,CAASC,KAAT;AACH,GAPD;;AASA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAET,YAAY,CAACU,kBAAD,CAA5B;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EACCZ,QAAQ,CAAC;AACLa,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAaC,YAAAA,OAAO,EAAE;AAAtB;AADL,SAAD,CAHhB;AAOI,QAAA,SAAS,EAAC,mBAPd;AAQI,QAAA,WAAW,EAAC;AARhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA,kBACKd,MADL,aACKA,MADL,yCACKA,MAAM,CAAEe,MADb,mDACK,eAAgBD;AADrB;AAAA;AAAA;AAAA;AAAA,cAXJ,eAcI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,GAAG,EACCf,QAAQ,CAAC;AACLa,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAaC,YAAAA,OAAO,EAAE;AAAtB;AADL,SAAD,CAHhB;AAOI,QAAA,SAAS,EAAC,mBAPd;AAQI,QAAA,WAAW,EAAC;AARhB;AAAA;AAAA;AAAA;AAAA,cAdJ,eAwBI;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA,kBACKd,MADL,aACKA,MADL,8CACKA,MAAM,CAAEgB,WADb,wDACK,oBAAqBF;AAD1B;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA2BI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAoCI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAEQG,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAA,mBACKD,IAAI,CAACJ,MADV,SACqBI,IAAI,CAACH,WAD1B;AAAA,SAASI,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CA/DD;;GAAMtB,W;UAEuCD,O;;;KAFvCC,W;AAkEN,eAAeA,WAAf","sourcesContent":["import React, {Fragment, useState} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form'\n\n\nconst ContactForm = () => {\n\n    const {register, errors, handleSubmit} = useForm();\n\n    const [Event, setData] = useState([]);\n\n    const onSubmit = (data, e) => {\n        console.log(data);\n        setData([\n            ...Event,\n            data\n        ])\n        e.target.reset()\n    }\n\n    return (\n        <Fragment>\n            <h1>FORM</h1>\n            <form onSubmit={handleSubmit(procesarFormulario)}>\n                <input\n                    name=\"titulo\"\n                    ref={\n                        register({\n                            required: {value:true, message: 'Ingrese un nombre'}\n                        })\n                    }\n                    className=\"form-control my-2\"\n                    placeholder=\"Ingrese título\"\n                ></input>\n                <span className=\"text-danger text-small d-block mb-2\">\n                    {errors?.titulo?.message}\n                </span>\n                <input\n                    name=\"descripcion\"\n                    ref={\n                        register({\n                            required: {value:true, message: 'Ingrese descripción'}\n                        })\n                    }\n                    className=\"form-control my-2\"\n                    placeholder=\"Ingrese descripción\"\n                ></input>\n                <span className=\"text-danger text-small d-block mb-2\">\n                    {errors?.descripcion?.message}\n                </span>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    >\n                Agregar\n                </button>\n            </form>\n            <ul className=\"mt-2\">\n                {\n                    entradas.map((item, index) =>\n                        <li key={index}>\n                            {item.titulo} - {item.descripcion}\n                        </li>\n                    )\n                }\n            </ul>\n        </Fragment>\n    );\n}     \n\n\nexport default ContactForm;\n\n"]},"metadata":{},"sourceType":"module"}