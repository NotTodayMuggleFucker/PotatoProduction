{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react'; // eslint-disable-next-line no-unused-vars\n\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const [Event, setData] = useState([]);\n\n  const onSubmit = (data, e) => {\n    console.log(data);\n    setData([...Event, data]);\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contact-heading\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contact-form-text\",\n        children: \"We\\u2019re available for remote projects around the world.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        className: \"form__container-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Name is required'\n              },\n              maxLength: {\n                value: 5,\n                message: 'No more tan 10 characters!'\n              },\n              minLength: {\n                value: 2,\n                message: 'Minimum 2 characters'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email address\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Email is required'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: errors.name.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"subject\",\n            placeholder: \"Subject\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Please field out this field'\n              },\n              minLength: {\n                value: 2,\n                message: 'Please field out this field'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: errors.name.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"message\",\n            placeholder: \"Message\",\n            className: \"form-input\",\n            ref: register({\n              required: {\n                value: true,\n                message: 'Please field out this field'\n              },\n              minLength: {\n                value: 5,\n                message: 'Please field out this field'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"btn--primary\",\n          buttonSize: \"btn--wide\",\n          buttonColor: \"pink\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactForm, \"1j3SQLAry4RMCNETSStiMnIUngk=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/ContactForm.js"],"names":["React","Fragment","useState","axios","Button","useForm","ContactForm","register","errors","handleSubmit","Event","setData","onSubmit","data","e","console","log","target","reset","required","value","message","maxLength","minLength","name","email","subject"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\nimport './ContactForm.css';\nimport { Button } from './Button';\nimport { useForm } from 'react-hook-form'\n\n\nconst ContactForm = () => {\n\n    const {register, errors, handleSubmit} = useForm();\n\n    const [Event, setData] = useState([]);\n\n    const onSubmit = (data, e) => {\n        console.log(data);\n        setData([\n            ...Event,\n            data\n        ])\n        e.target.reset()\n    }\n\n    return (\n        <Fragment>\n            <div className='contact-container'>\n            <h1 className='contact-heading'>Contact Us</h1>\n              <p className='contact-form-text'>\n                We’re available for remote projects around the world.\n                 </p>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form__container-card\">\n                <div className=\"\">\n                    <input type=\"text\" name=\"name\"\n                     placeholder=\"Name\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                            value: true, \n                            message: 'Name is required'\n                            }, \n                        maxLength: {\n                            value: 5, \n                            message: 'No more tan 10 characters!'\n                            },\n                        minLength: {\n                            value: 2, \n                            message: 'Minimum 2 characters'\n                            }\n                    })}\n                     >\n                     </input>\n                     { errors.name && \n                        <span className=\"\">\n                          {errors.name.message}\n                      </span>}\n                </div>\n                <div className=\"\">\n                <input type=\"email\" name=\"email\"\n                     placeholder=\"Email address\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                            value: true, \n                            message: 'Email is required'\n                            }, \n                    })}\n                     >\n                     </input>\n                     { errors.email && \n                        <span className=\"\">\n                          {errors.name.email}\n                      </span>}\n                </div>\n                <div className=\"\">\n                     <input type=\"text\" name=\"subject\"\n                     placeholder=\"Subject\" className=\"form-input\" \n                     ref={register({\n                     required: {\n                        value: true, \n                        message: 'Please field out this field'\n                        }, \n                    minLength: {\n                        value: 2, \n                        message: 'Please field out this field'\n                        }\n                })}\n                     >\n                     </input>\n                     { errors.subject && \n                        <span className=\"\">\n                          {errors.name.subject}\n                      </span>}\n                </div>\n                <div className=\"\">\n                    <textarea type=\"text\" name=\"message\"\n                     placeholder=\"Message\" className=\"form-input\" \n                     ref={register({\n                        required: {\n                           value: true, \n                           message: 'Please field out this field'\n                           }, \n                       minLength: {\n                           value: 5, \n                           message: 'Please field out this field'\n                           }\n                   })}\n                     >\n                     </textarea>\n                     { errors.message && \n                        <span className=\"\">\n                          {errors.name.message}\n                      </span>}\n                </div>\n                <Button type=\"submit\"  className='btn--primary'  buttonSize='btn--wide' buttonColor='pink'>\n                    Send\n                    </Button>\n            </form>\n            </div>\n        </Fragment>\n    );\n}     \n\n\nexport default ContactForm;\n\n"]},"metadata":{},"sourceType":"module"}