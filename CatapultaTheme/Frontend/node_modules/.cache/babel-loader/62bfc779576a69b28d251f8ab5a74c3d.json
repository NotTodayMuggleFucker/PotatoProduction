{"ast":null,"code":"var _jsxFileName = \"/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HookForm = () => {\n  _s();\n\n  var _errors$Name;\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const [entradas, setentradas] = useState([]);\n\n  const onSubmit = data => {\n    console.log(data);\n    setentradas([...entradas, data]); // limpiar campos\n\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hooks Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"OnlyName\",\n        lassName: \"form-input\",\n        ...register(\"Name\", {\n          required: true,\n          maxLength: 20\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"contact-form-text\",\n        children: [\" \", ((_errors$Name = errors.Name) === null || _errors$Name === void 0 ? void 0 : _errors$Name.type) === 'required' && \"First name is required\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n          pattern: /^[A-Za-z]+$/i\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HookForm, \"vs4xudEhcRoSxsMzZtpAIeizeX8=\", false, function () {\n  return [useForm];\n});\n\n_c = HookForm;\nexport default HookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookForm\");","map":{"version":3,"sources":["/Users/david/Catapulta/Documents/PotatoProduction/CatapultaTheme/Frontend/src/components/HookForm.js"],"names":["React","Fragment","useState","useForm","HookForm","register","formState","errors","handleSubmit","entradas","setentradas","onSubmit","data","console","log","e","target","reset","required","maxLength","Name","type","pattern"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AAEnB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAtB;AAAkCC,IAAAA;AAAlC,MAAkDL,OAAO,EAA/D;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,IAAAA,WAAW,CAAC,CACR,GAAGD,QADK,EAERG,IAFQ,CAAD,CAAX,CAFyB,CAMzB;;AACAG,IAAAA,CAAC,CAACC,MAAF,CAASC,KAAT;AACH,GARD;;AAUA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAET,YAAY,CAACG,QAAD,CAA5B;AAAA,8BAEN;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAgC,QAAA,WAAW,EAAC,UAA5C;AAAuD,QAAA,QAAQ,EAAC,YAAhE;AAAA,WACKN,QAAQ,CAAC,MAAD,EAAS;AAAEa,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAT;AADb;AAAA;AAAA;AAAA;AAAA,cAFM,eAKN;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,wBAAsC,iBAAAZ,MAAM,CAACa,IAAP,8DAAaC,IAAb,MAAsB,UAAtB,IAAoC,wBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,cALM,eAOP,sBAAWhB,QAAQ,CAAC,UAAD,EAAa;AAAEiB,UAAAA,OAAO,EAAE;AAAX,SAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,cAPO,eAUN;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAVM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAlCD;;GAAMlB,Q;UAEsDD,O;;;KAFtDC,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState, } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './ContactForm.css';\n\nconst HookForm = () => {\n\n    const {register, formState: { errors }, handleSubmit} = useForm();\n\n    const [entradas, setentradas] = useState([]);\n\n    const onSubmit = (data, ) => {\n        console.log(data)\n        setentradas([\n            ...entradas,\n            data\n        ])\n        // limpiar campos\n        e.target.reset();\n    }\n  \n    return (\n        <Fragment>\n            <h2>Hooks Forms</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n      \n      <input type=\"text\" name=\"name\"  placeholder=\"OnlyName\" lassName=\"form-input\" \n       {...register(\"Name\", { required: true, maxLength: 20 })} />\n      \n      <span className='contact-form-text'> {errors.Name?.type === 'required' && \"First name is required\"} </span>\n     \n     <input {...register(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\n     \n   \n      <input type=\"submit\" />\n    </form>\n            \n        </Fragment>\n    );\n}\n \nexport default HookForm;\n"]},"metadata":{},"sourceType":"module"}